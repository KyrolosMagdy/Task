{"version":3,"sources":["assets/brand.jpg","components/nav-bar/nav-bar.component.js","redux/users/types.js","redux/users/users.actions.js","components/table/table.component.js","pages/users/usersPage.page.js","components/loader/loader.component.js","redux/posts/PostsTypes.js","redux/posts/posts.actions.js","components/card/card.component.js","pages/posts/user-posts.page.js","redux/comments/comments.types.js","assets/card-image.jpg","components/postCard/postCard.components.js","pages/comments/comments.page.js","redux/comments/comments.actions.js","App.js","reportWebVitals.js","theme.js","redux/comments/comments.reducers.js","redux/posts/posts.reducer.js","redux/users/users.reducer.js","redux/root-reducer.js","redux/users/users.saga.js","redux/posts/posts.saga.js","redux/comments/comments.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","shadow","aboveNav","padding","backgroundColor","menuButton","marginRight","spacing","title","color","NavBar","classes","history","useHistory","className","AppBar","position","Toolbar","src","Brand","alt","onClick","push","UsersTypes","FETCH_USERS_START","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","SET_TOTAL_USERS","SET_IS_LOADING","SET_ROWS_PERPAGE","LOAD_MORE_USERS","LOAD_MORE_USERS_SUCCESS","SEARCH_FOR_SPECIFIC_USER","SetUsersSuccess","users","type","payload","SetTotalUsers","totalUsers","SetIsLoading","useStyles1","flexShrink","marginLeft","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onChangePage","IconButton","event","disabled","aria-label","direction","Math","ceil","max","useStyles2","table","minWidth","marginTop","inactive","active","connect","state","dispatch","setRowsPerPageAction","SetRowsPerPage","data","totalData","onMoreDataRequired","handleOnRowClick","titles","currentPage","React","useState","setPage","rows","emptyRows","min","length","ckeckIfMoreDataIsRequired","updated","backendPageNumber","floor","console","log","StyledTableCell","withStyles","head","palette","common","black","fontWeight","TableCell","StyledTableRow","action","hover","TableRow","hanldeRowClicked","row","TableContainer","component","Paper","Table","TableHead","map","align","TableBody","slice","id","body","name","email","format","created_at","updated_at","gender","status","style","width","height","colSpan","TableFooter","TablePagination","shape","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","value","ActionsComponent","wrapper","margin","breakpoints","up","headerWrapper","display","justifyContent","down","flexDirection","alignItems","inputInput","paddingLeft","transition","transitions","create","searchIcon","pointerEvents","inputRoot","search","borderRadius","borderColor","fade","white","searchWrapper","getUsersStartsAction","loadMoreUsersAction","pageNumber","LoadMoreUsers","SearchForSpecificUserAction","userName","SearchForSpecificUser","useEffect","Typography","variant","gutterBottom","border","InputBase","placeholder","input","onChange","e","varianr","pathname","backdrop","zIndex","drawer","Loader","isLoading","Button","Backdrop","open","CircularProgress","PostsTypes","GET_POSTS_STARTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","IS_LOADING","fontSize","pos","marginBottom","avatar","emailWrapper","greenColor","statusWrapper","UserCard","user","CardContent","Avatar","infoWrapper","textWrapper","TitleWrapper","posts","getPostsStartsAction","userId","getPostsStarts","location","useParams","cursor","CommentsTypes","FETCH_COMMENTS_STATRS","FETCH_COMMENTS_SUCCESS","FETCH_COMMENTS_FAILURE","mediaWrapper","media","textAlign","bodyWrapper","bodyContent","PostCard","post","Card","CardMedia","image","CardImage","titleWrapper","comments","fetchCommentsStartsAction","postId","fetchCommsntsStarts","path","exact","CommentPage","PostsPage","UsersPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","background","paper","default","primary","light","main","dark","contrastText","secondary","INITIAL_STATE","CommentsReducer","isPostsLoading","PostsReducer","UserReducer","combineReducers","fetchUsersAsync","fetchUsersStart","loadMoreUsersAsync","loadMoreUsersStarts","searchspecificUserAsync","SearchForSpecificUserSaga","put","axios","get","response","meta","pagination","total","takeEvery","newUsers","takeLatest","getPostsAsync","fetchCommentsStartsAsync","FetchCommentsStarts","rootSaga","all","call","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a08d4bc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brand.ff937463.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Brand from '../../assets/brand.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    shadow: 'none',\r\n  },\r\n  aboveNav: {\r\n    padding: '12px',\r\n    backgroundColor: '#5c5c5c',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleImageClick = () => {\r\n    history.push('/task/');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.aboveNav}></div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={Brand} alt=\"Logo\" onClick={handleImageClick} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","const UsersTypes = {\r\n  FETCH_USERS_START: 'FETCH_USERS_START',\r\n  FETCH_USERS_SUCCESS: 'FETCH_USERS_SUCCESS',\r\n  FETCH_USERS_FAILURE: 'FETCH_USERS_FAILURE',\r\n  SET_TOTAL_USERS: 'SET_TOTAL_USERS',\r\n  SET_IS_LOADING: 'SET_IS_LOADING',\r\n  SET_ROWS_PERPAGE: 'SET_ROWS_PERPAGE',\r\n  LOAD_MORE_USERS: 'LOAD_MORE_DATA',\r\n  LOAD_MORE_USERS_SUCCESS: 'LOAD_MORE_USERS_SUCCESS',\r\n  SEARCH_FOR_SPECIFIC_USER: 'SEARCH_FOR_SPECIFIC_USER',\r\n};\r\n\r\nexport default UsersTypes;\r\n","import UsersTypes from './types';\r\n\r\nexport const getUsersStarts = () => {\r\n  return {\r\n    type: UsersTypes.FETCH_USERS_START,\r\n  };\r\n};\r\n\r\nexport const SetUsersSuccess = (users) => ({\r\n  type: UsersTypes.FETCH_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const SetTotalUsers = (totalUsers) => ({\r\n  type: UsersTypes.SET_TOTAL_USERS,\r\n  payload: totalUsers,\r\n});\r\n\r\nexport const SetIsLoading = () => ({\r\n  type: UsersTypes.SET_IS_LOADING,\r\n});\r\n\r\nexport const SetRowsPerPage = (rowsPerPage) => ({\r\n  type: UsersTypes.SET_ROWS_PERPAGE,\r\n  payload: rowsPerPage,\r\n});\r\n\r\nexport const LoadMoreUsers = (pageNumber) => ({\r\n  type: UsersTypes.LOAD_MORE_USERS,\r\n  payload: pageNumber,\r\n});\r\n\r\nexport const LoadMoreUsersSuccess = (newUsers) => ({\r\n  type: UsersTypes.LOAD_MORE_USERS_SUCCESS,\r\n  payload: newUsers,\r\n});\r\n\r\nexport const SearchForSpecificUser = (userName) => ({\r\n  type: UsersTypes.SEARCH_FOR_SPECIFIC_USER,\r\n  payload: userName,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { SetRowsPerPage } from '../../redux/users/users.actions';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n    marginTop: '20px',\r\n  },\r\n  inactive: {\r\n    color: 'red',\r\n  },\r\n  active: {\r\n    color: 'green',\r\n  },\r\n});\r\n\r\nconst CustomTable = ({\r\n  data,\r\n  totalData,\r\n  rowsPerPage,\r\n  setRowsPerPageAction,\r\n  onMoreDataRequired,\r\n  handleOnRowClick,\r\n  titles,\r\n  currentPage,\r\n}) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const rows = data;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const ckeckIfMoreDataIsRequired = () => {\r\n    const updated = rowsPerPage * page;\r\n    const backendPageNumber = Math.floor((updated + 10) / rows.length) + 1;\r\n    console.log('checks: ', rowsPerPage);\r\n    if (backendPageNumber > 1) {\r\n      onMoreDataRequired(backendPageNumber);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    ckeckIfMoreDataIsRequired();\r\n  };\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      color: theme.palette.common.black,\r\n      fontWeight: 'bold',\r\n    },\r\n  }))(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPageAction(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    ckeckIfMoreDataIsRequired();\r\n  };\r\n\r\n  const hanldeRowClicked = (row) => {\r\n    console.log('rowClicke: ', row);\r\n    handleOnRowClick(row);\r\n  };\r\n\r\n  console.log('row: ', rows);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {titles.map((head) => (\r\n              <StyledTableCell align=\"center\"> {head} </StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => {\r\n            if (currentPage === 'posts') {\r\n              return (\r\n                <StyledTableRow\r\n                  key={row.name}\r\n                  onClick={() => hanldeRowClicked(row)}\r\n                >\r\n                  <StyledTableCell align=\"center\">{row.id}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.title}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.body}</StyledTableCell>\r\n                </StyledTableRow>\r\n              );\r\n            }\r\n            if (currentPage === 'comments') {\r\n              return (\r\n                <StyledTableRow\r\n                  key={row.name}\r\n                  onClick={() => hanldeRowClicked(row)}\r\n                >\r\n                  <StyledTableCell align=\"center\">{row.id}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.body}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <Moment format=\"DD-MM-YYYY hh:mm a\">\r\n                      {row.created_at}\r\n                    </Moment>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <Moment format=\"DD-MM-YYYY hh:mm a\">\r\n                      {row.updated_at}\r\n                    </Moment>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              );\r\n            }\r\n            return (\r\n              <StyledTableRow\r\n                key={row.name}\r\n                onClick={() => hanldeRowClicked(row)}\r\n              >\r\n                <StyledTableCell align=\"center\">{row.id}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.gender}</StyledTableCell>\r\n                <StyledTableCell\r\n                  className={`${row.status !== 'Inactive' && classes.active}`}\r\n                  style={{ width: 160 }}\r\n                  align=\"center\"\r\n                >\r\n                  • {row.status}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  <Moment format=\"DD-MM-YYYY hh:mm a\">{row.created_at}</Moment>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  <Moment format=\"DD-MM-YYYY hh:mm a\">{row.updated_at}</Moment>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            );\r\n          })}\r\n\r\n          {emptyRows > 0 && (\r\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\r\n              <StyledTableCell colSpan={6} />\r\n            </StyledTableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              shape=\"rounded\"\r\n              rowsPerPageOptions={[5, 10]}\r\n              colSpan={3}\r\n              count={totalData}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  rowsPerPage: state.users.rowsPerPage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRowsPerPageAction: (rowsPerPage) => dispatch(SetRowsPerPage(rowsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomTable);\r\n","import React, { useEffect } from 'react';\r\nimport CustomTable from '../../components/table/table.component';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUsersStarts,\r\n  LoadMoreUsers,\r\n  SearchForSpecificUser,\r\n} from '../../redux/users/users.actions';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: '3rem',\r\n    [theme.breakpoints.up('sm')]: {\r\n      margin: '15px',\r\n      marginTop: '4rem',\r\n    },\r\n  },\r\n  headerWrapper: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      justifyContent: 'space-between',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    borderColor: theme.palette.common.black,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n  },\r\n\r\n  searchWrapper: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UsersPage = ({\r\n  getUsersStartsAction,\r\n  users,\r\n  totalUsers,\r\n  rowsPerPage,\r\n  loadMoreUsersAction,\r\n  SearchForSpecificUserAction,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getUsersStartsAction();\r\n  }, [getUsersStartsAction]);\r\n\r\n  const handleMoreUsersRequired = (pageNumber) => {\r\n    loadMoreUsersAction(pageNumber);\r\n  };\r\n\r\n  const headers = [\r\n    '#',\r\n    'Name',\r\n    'Email Address',\r\n    'Gender',\r\n    'Status',\r\n    'Created Date',\r\n    'Updated Date',\r\n  ];\r\n\r\n  const handleOnRowClick = (row) => {\r\n    history.push({\r\n      pathname: `/task/${row.id}`,\r\n      state: {\r\n        row: row,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    SearchForSpecificUserAction(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.headerWrapper}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Users Directory\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Lorem ipsum dolor sit amet\r\n          </Typography>\r\n          <div className={classes.searchWrapper}>\r\n            <div\r\n              className={classes.search}\r\n              style={{ border: '2px solid silver' }}\r\n            >\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search By Name…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onChange={handleSearchChange}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n          {' '}\r\n          <Typography varianr=\"h6\">\r\n            {' '}\r\n            Showing {rowsPerPage} of {totalUsers}{' '}\r\n          </Typography>{' '}\r\n        </div>\r\n      </div>\r\n      {users.users.length > 0 ? (\r\n        <CustomTable\r\n          data={users.users}\r\n          totalData={totalUsers}\r\n          onMoreDataRequired={handleMoreUsersRequired}\r\n          handleOnRowClick={handleOnRowClick}\r\n          titles={headers}\r\n          currentPage=\"users\"\r\n        />\r\n      ) : (\r\n        <div> No Users Yet </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  console.log('in the component');\r\n  return {\r\n    getUsersStartsAction: () => dispatch(getUsersStarts()),\r\n    loadMoreUsersAction: (pageNumber) => dispatch(LoadMoreUsers(pageNumber)),\r\n    SearchForSpecificUserAction: (userName) =>\r\n      dispatch(SearchForSpecificUser(userName)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  totalUsers: state.users.totalUsers,\r\n  rowsPerPage: state.users.rowsPerPage,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Loader = ({ isLoading }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\">\r\n        Show backdrop\r\n      </Button>\r\n      <Backdrop className={classes.backdrop} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","const PostsTypes = {\r\n  GET_POSTS_STARTS: 'GET_POSTS_STARTS',\r\n  GET_POSTS_SUCCESS: 'GET_POSTS_SUCCESS',\r\n  GET_POSTS_FAILURE: 'GET_POSTS_FAILURE',\r\n  IS_LOADING: 'IS_LOADING',\r\n};\r\n\r\nexport default PostsTypes;\r\n","import PostsTypes from './PostsTypes';\r\n\r\nexport const getPostsStarts = (userId) => ({\r\n  type: PostsTypes.GET_POSTS_STARTS,\r\n  payload: userId,\r\n});\r\n\r\nexport const getPostsSuccess = (posts) => ({\r\n  type: PostsTypes.GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const isLoading = () => ({\r\n  type: PostsTypes.IS_LOADING,\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '14px',\r\n    },\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  avatar: {\r\n    width: '90px',\r\n    height: '90px',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '50px',\r\n      height: '50px',\r\n    },\r\n  },\r\n  emailWrapper: {\r\n    fontSize: 16,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '14px',\r\n    },\r\n  },\r\n  greenColor: {\r\n    color: 'green',\r\n  },\r\n  statusWrapper: {\r\n    fontSize: '16px',\r\n    display: 'flex',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserCard = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CardContent\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'left',\r\n          alignItems: 'center',\r\n          padding: '16px 0',\r\n        }}\r\n      >\r\n        <Avatar\r\n          src=\"/broken-image.jpg\"\r\n          display=\"inline\"\r\n          className={classes.avatar}\r\n        />\r\n        <span\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'left',\r\n            marginLeft: '15px',\r\n          }}\r\n        >\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h4\"\r\n            gutterBottom\r\n            style={{ display: 'flex' }}\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            display=\"inline\"\r\n            className={classes.emailWrapper}\r\n            component=\"h2\"\r\n            color=\"secondary\"\r\n          >\r\n            {user.email}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            display=\"inline\"\r\n            className={`${classes.statusWrapper} ${\r\n              user.status === 'Active' && classes.greenColor\r\n            }`}\r\n            component=\"h2\"\r\n            color=\"secondary\"\r\n          >\r\n            • {user.status}\r\n          </Typography>\r\n        </span>\r\n      </CardContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getPostsStarts } from '../../redux/posts/posts.actions';\r\nimport { connect } from 'react-redux';\r\nimport CustomTable from '../../components/table/table.component';\r\nimport { Typography } from '@material-ui/core';\r\nimport Moment from 'react-moment';\r\nimport UserCard from '../../components/card/card.component';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  infoWrapper: {\r\n    display: 'flex',\r\n    width: '50%',\r\n    justifyContent: 'space-between',\r\n    margin: '1rem',\r\n    marginBottom: '5rem',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  textWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '15px',\r\n    },\r\n  },\r\n  TitleWrapper: {\r\n    fontWeight: 'bold',\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '16px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PostsPage = ({ getPostsStartsAction, posts, location }) => {\r\n  const classes = useStyles();\r\n  const { userId } = useParams();\r\n  const user = location.state.row;\r\n\r\n  useEffect(() => {\r\n    getPostsStartsAction(userId);\r\n  }, [userId, getPostsStartsAction]);\r\n\r\n  const handleMoreDataRequired = () => {\r\n    console.log('More Posts Are Required');\r\n  };\r\n\r\n  const hanldeOnPostRowClick = (row) => {\r\n    console.log('supposed to get comments');\r\n    history.push({\r\n      pathname: `/task/${user.id}/${row.id}`,\r\n      state: {\r\n        row: row,\r\n        user: user,\r\n      },\r\n    });\r\n  };\r\n\r\n  const titles = ['Post Id', 'Post Title', 'Body'];\r\n  const history = useHistory();\r\n\r\n  console.log('posts: ', posts.length);\r\n  return (\r\n    <div style={{ margin: '3rem' }}>\r\n      <button\r\n        style={{\r\n          color: '#8f9192',\r\n          borderRadius: '5px',\r\n          padding: '3px 13px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n          backgroundColor: 'whitesmoke',\r\n        }}\r\n        onClick={() => history.push('/task/')}\r\n      >\r\n        Back{' '}\r\n        <Typography variant=\"h5\" display=\"inline\">\r\n          {' '}\r\n          &#11178;{' '}\r\n        </Typography>\r\n      </button>\r\n\r\n      <hr />\r\n      <div style={{ margin: '1rem' }}>\r\n        <UserCard user={user} />\r\n      </div>\r\n\r\n      <div className={classes.infoWrapper}>\r\n        <div\r\n          style={{ display: 'flex', flexDirection: 'column', margin: '1rem 0' }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            Total\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            No. of Posts\r\n          </Typography>\r\n          <Typography variant=\"h5\" className={classes.textWrapper}>\r\n            {posts.length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div\r\n          style={{ display: 'flex', flexDirection: 'column', margin: '1rem 0' }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            Current Page\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            No. of Posts\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              color: '#521010',\r\n            }}\r\n            className={classes.textWrapper}\r\n          >\r\n            {posts.length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div\r\n          style={{ display: 'flex', flexDirection: 'column', margin: '1rem 0' }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            User\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            Creation Date\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            style={{\r\n              color: 'secondary',\r\n            }}\r\n          >\r\n            <Moment format=\"DD-MM-YYYY\" style={{ color: '#8f9192' }}>\r\n              {user.created_at}\r\n            </Moment>\r\n          </Typography>\r\n        </div>\r\n\r\n        <div\r\n          style={{ display: 'flex', flexDirection: 'column', margin: '1rem 0' }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            Current Page\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            color=\"secondary\"\r\n          >\r\n            No. of Posts\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.textWrapper}\r\n            style={{\r\n              color: '#521010',\r\n            }}\r\n          >\r\n            <Moment format=\"DD-MM-YYYY\" style={{ color: '#8f9192' }}>\r\n              {user.updated_at}\r\n            </Moment>\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div style={{ marginTop: '3rem' }}>\r\n        <Typography variant=\"h6\" className={classes.TitleWrapper}>\r\n          {' '}\r\n          User Posts{' '}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"caption\"\r\n          className={classes.textWrapper}\r\n          color=\"secondary\"\r\n        >\r\n          {' '}\r\n          Lorem idgdgjdgkg{' '}\r\n        </Typography>\r\n      </div>\r\n      <div>\r\n        {posts.length > 0 ? (\r\n          <CustomTable\r\n            data={posts}\r\n            totalData={posts.length}\r\n            onMoreDataRequired={handleMoreDataRequired}\r\n            handleOnRowClick={hanldeOnPostRowClick}\r\n            titles={titles}\r\n            currentPage=\"posts\"\r\n          />\r\n        ) : (\r\n          <p> This User didn't post yet? </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPostsStartsAction: (userId) => dispatch(getPostsStarts(userId)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsPage);\r\n","const CommentsTypes = {\r\n  FETCH_COMMENTS_STATRS: 'FETCH_COMMENTS_STARTS',\r\n  FETCH_COMMENTS_SUCCESS: 'FETCH_COMMENTS_SUCCESS',\r\n  FETCH_COMMENTS_FAILURE: 'FETCH_COMMENTS_FAILYRE',\r\n};\r\n\r\nexport default CommentsTypes;\r\n","export default __webpack_public_path__ + \"static/media/card-image.11b5e034.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardImage from '../../assets/card-image.jpg';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: 'whitesmoke',\r\n    padding: '1rem',\r\n  },\r\n  mediaWrapper: {\r\n    display: 'flex',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  media: {\r\n    height: 200,\r\n    width: 280,\r\n    display: 'flex',\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      height: 200,\r\n      width: '100%',\r\n    },\r\n  },\r\n  TitleWrapper: {\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    margin: 0,\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '14px',\r\n    },\r\n  },\r\n  textWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    marginBottom: '1rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '14px',\r\n    },\r\n  },\r\n  bodyWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  bodyContent: {\r\n    fontSize: '17px',\r\n  },\r\n}));\r\n\r\nconst PostCard = ({ post }) => {\r\n  const classes = useStyles();\r\n\r\n  console.log('post: ', post);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.mediaWrapper}>\r\n        <div>\r\n          <p className={classes.TitleWrapper}>{post.title}</p>\r\n\r\n          <Typography color=\"secondary\" className={classes.textWrapper}>\r\n            <Moment format=\" D MMMM \">{post.updated_at}</Moment>\r\n            <p style={{ margin: '0 0.25rem' }}> At </p>{' '}\r\n            <Moment format=\" HH:MM \">{post.updated_at}</Moment>\r\n          </Typography>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={CardImage}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.bodyWrapper} style={{ width: '100%' }}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            className={classes.bodyContent}\r\n            component=\"p\"\r\n          >\r\n            {post.body}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCommsntsStarts } from '../../redux/comments/comments.actions';\r\nimport CustomTable from '../../components/table/table.component';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostCard from '../../components/postCard/postCard.components';\r\nimport UserCard from '../../components/card/card.component';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleWrapper: {\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    display: 'flex',\r\n    marginTop: '1.5rem',\r\n  },\r\n  textWrapper: {\r\n    fontSize: '16px',\r\n    color: '#8f9192',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst CommentPage = ({ location, fetchCommentsStartsAction, comments }) => {\r\n  const { postId } = useParams();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchCommentsStartsAction(postId);\r\n  }, [postId, fetchCommentsStartsAction]);\r\n\r\n  const handleOnMoreCommentsRequires = () => {\r\n    console.log('there is no more data');\r\n  };\r\n\r\n  const handleOnCommentRowClick = () => {\r\n    console.log('we are supposed to do nothing');\r\n  };\r\n\r\n  const titles = [\r\n    '#',\r\n    'Name',\r\n    'Email Address',\r\n    'Body',\r\n    'Created Date',\r\n    'Updated Date',\r\n  ];\r\n\r\n  return (\r\n    <div style={{ margin: '3rem' }}>\r\n      <button\r\n        style={{\r\n          color: '#8f9192',\r\n          borderRadius: '5px',\r\n          padding: '3px 13px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n          backgroundColor: 'whitesmoke',\r\n        }}\r\n        onClick={() =>\r\n          history.push({\r\n            pathname: `/task/${postId}`,\r\n            state: {\r\n              row: location.state.user,\r\n            },\r\n          })\r\n        }\r\n      >\r\n        Back{' '}\r\n        <Typography variant=\"h5\" display=\"inline\">\r\n          {' '}\r\n          &#11178;{' '}\r\n        </Typography>\r\n      </button>\r\n\r\n      <hr />\r\n      <UserCard user={location.state.user} />\r\n      <PostCard post={location.state.row} />\r\n      <div>\r\n        <Typography className={classes.titleWrapper}>Comments</Typography>\r\n        <Typography className={classes.textWrapper}>\r\n          djhgjkdghjkd ddjgkldsg dgd g\r\n        </Typography>\r\n      </div>\r\n      <CustomTable\r\n        data={comments}\r\n        totalData={comments.length}\r\n        onMoreDataRequired={handleOnMoreCommentsRequires}\r\n        handleOnRowClick={handleOnCommentRowClick}\r\n        titles={titles}\r\n        currentPage=\"comments\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCommentsStartsAction: (postId) => dispatch(fetchCommsntsStarts(postId)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.comments.comments,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentPage);\r\n","import CommentsTypes from './comments.types';\r\n\r\nexport const fetchCommsntsStarts = (postId) => ({\r\n  type: CommentsTypes.FETCH_COMMENTS_STATRS,\r\n  payload: postId,\r\n});\r\n\r\nexport const fetchCommentsSuccess = (comments) => ({\r\n  type: CommentsTypes.FETCH_COMMENTS_SUCCESS,\r\n  payload: comments,\r\n});\r\n","import './App.css';\nimport NavBar from './components/nav-bar/nav-bar.component';\nimport UsersPage from './pages/users/usersPage.page';\nimport Loader from './components/loader/loader.component';\nimport { connect } from 'react-redux';\nimport PostsPage from './pages/posts/user-posts.page';\nimport { Switch, Route } from 'react-router-dom';\nimport CommentPage from './pages/comments/comments.page';\n\nfunction App({ isLoading }) {\n  return (\n    <div className=\"App\">\n      <Loader isLoading={isLoading} />\n      <NavBar />\n      <Switch>\n        <Route path=\"/task/:userId/:postId\" exact component={CommentPage} />\n        <Route path=\"/task/:userId\" exact component={PostsPage} />\n        <Route path=\"/task/\" exact component={UsersPage} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.users.isLoading,\n});\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#fff',\r\n      default: '#fafafa',\r\n    },\r\n    primary: {\r\n      light: '#c2c3bf',\r\n      main: '#f6f6f6',\r\n      dark: '#646562',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: '#8f9192',\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","import CommentsTypes from './comments.types';\r\n\r\nconst INITIAL_STATE = {\r\n  comments: [],\r\n};\r\n\r\nconst CommentsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CommentsTypes.FETCH_COMMENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CommentsReducer;\r\n","import PostsTypes from './PostsTypes';\r\n\r\nconst INITIAL_STATE = {\r\n  posts: [],\r\n  isPostsLoading: false,\r\n};\r\n\r\nconst PostsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case PostsTypes.GET_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    }\r\n\r\n    case PostsTypes.IS_LOADING: {\r\n      return {\r\n        ...state,\r\n        isPostsLoading: !state.isPostsLoading,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default PostsReducer;\r\n","import UsersTypes from './types';\r\n\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  totalUsers: 0,\r\n  isLoading: false,\r\n  rowsPerPage: 5,\r\n};\r\n\r\nconst UserReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UsersTypes.FETCH_USERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    }\r\n\r\n    case UsersTypes.SET_TOTAL_USERS: {\r\n      return {\r\n        ...state,\r\n        totalUsers: action.payload,\r\n      };\r\n    }\r\n\r\n    case UsersTypes.SET_IS_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading,\r\n      };\r\n    }\r\n\r\n    case UsersTypes.SET_ROWS_PERPAGE: {\r\n      return {\r\n        ...state,\r\n        rowsPerPage: action.payload,\r\n      };\r\n    }\r\n\r\n    case UsersTypes.LOAD_MORE_USERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        users: [...state.users, ...action.payload],\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import { combineReducers } from 'redux';\r\nimport CommentsReducer from './comments/comments.reducers';\r\nimport PostsReducer from './posts/posts.reducer';\r\nimport UserReducer from './users/users.reducer';\r\n\r\nexport default combineReducers({\r\n  users: UserReducer,\r\n  posts: PostsReducer,\r\n  comments: CommentsReducer,\r\n});\r\n","import axios from 'axios';\r\nimport { takeEvery, put, takeLatest } from 'redux-saga/effects';\r\nimport UsersTypes from './types';\r\nimport {\r\n  SetTotalUsers,\r\n  SetUsersSuccess,\r\n  SetIsLoading,\r\n  LoadMoreUsersSuccess,\r\n} from './users.actions';\r\n\r\nexport function* fetchUsersAsync() {\r\n  try {\r\n    yield console.log('Im here');\r\n    yield put(SetIsLoading());\r\n    const response = yield axios.get('https://gorest.co.in/public-api/users');\r\n    yield put(SetUsersSuccess(response.data.data));\r\n    yield put(SetTotalUsers(response.data.meta.pagination.total));\r\n    yield put(SetIsLoading());\r\n  } catch (err) {\r\n    console.log('err: ', err);\r\n  }\r\n}\r\n\r\nexport function* fetchUsersStart() {\r\n  yield takeEvery(UsersTypes.FETCH_USERS_START, fetchUsersAsync);\r\n}\r\n\r\nexport function* loadMoreUsersAsync(action) {\r\n  yield put(SetIsLoading());\r\n  try {\r\n    const pageNumber = action.payload;\r\n    const response = yield axios.get(\r\n      `https://gorest.co.in/public-api/users?page=${pageNumber}`\r\n    );\r\n    yield put(LoadMoreUsersSuccess(response.data.data));\r\n  } catch (err) {\r\n    console.log('err: ', err);\r\n  }\r\n\r\n  yield put(SetIsLoading());\r\n}\r\n\r\nexport function* loadMoreUsersStarts() {\r\n  yield takeEvery(UsersTypes.LOAD_MORE_USERS, loadMoreUsersAsync);\r\n}\r\n\r\nexport function* searchspecificUserAsync(action) {\r\n  yield put(SetIsLoading());\r\n\r\n  try {\r\n    const response = yield axios.get(\r\n      `https://gorest.co.in/public-api/users?name=${action.payload}`\r\n    );\r\n    yield put(SetUsersSuccess(response.data.data));\r\n    yield put(SetTotalUsers(response.data.meta.pagination.total));\r\n  } catch (err) {\r\n    console.log('err: ', err);\r\n  }\r\n\r\n  yield put(SetIsLoading());\r\n}\r\n\r\nexport function* SearchForSpecificUserSaga() {\r\n  yield takeLatest(\r\n    UsersTypes.SEARCH_FOR_SPECIFIC_USER,\r\n    searchspecificUserAsync\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { takeEvery, put } from 'redux-saga/effects';\r\nimport { getPostsSuccess, isLoading } from './posts.actions';\r\nimport PostsTypes from './PostsTypes';\r\n\r\nexport function* getPostsAsync(action) {\r\n  yield put(isLoading());\r\n  try {\r\n    console.log('checking pyaload: ', action.payload);\r\n    const response = yield axios.get(\r\n      `https://gorest.co.in/public-api/posts?user_id=${action.payload}`\r\n    );\r\n\r\n    yield put(getPostsSuccess(response.data.data));\r\n    console.log('resss: ', response.data.data);\r\n  } catch (err) {\r\n    console.log('err from here: ', err);\r\n  }\r\n  yield put(isLoading());\r\n}\r\n\r\nexport function* getPostsStarts() {\r\n  yield takeEvery(PostsTypes.GET_POSTS_STARTS, getPostsAsync);\r\n}\r\n","import { takeEvery, put } from '@redux-saga/core/effects';\r\nimport axios from 'axios';\r\nimport { fetchCommentsSuccess } from './comments.actions';\r\nimport CommentsTypes from './comments.types';\r\n\r\nexport function* fetchCommentsStartsAsync(action) {\r\n  try {\r\n    yield console.log('a: ', action.payload);\r\n\r\n    const response = yield axios.get(\r\n      `https://gorest.co.in/public-api/comments?post_id=${action.payload}`\r\n    );\r\n\r\n    console.log('comments: ', response.data.data);\r\n    yield put(fetchCommentsSuccess(response.data.data));\r\n  } catch (err) {\r\n    console.log('err: ', err);\r\n  }\r\n}\r\n\r\nexport function* FetchCommentsStarts() {\r\n  yield takeEvery(\r\n    CommentsTypes.FETCH_COMMENTS_STATRS,\r\n    fetchCommentsStartsAsync\r\n  );\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n  fetchUsersStart,\r\n  loadMoreUsersStarts,\r\n  SearchForSpecificUserSaga,\r\n} from './users/users.saga';\r\nimport { getPostsStarts } from './posts/posts.saga';\r\nimport { FetchCommentsStarts } from './comments/comments.saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    call(fetchUsersStart),\r\n    call(loadMoreUsersStarts),\r\n    call(getPostsStarts),\r\n    call(FetchCommentsStarts),\r\n    call(SearchForSpecificUserSaga),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [logger, sagaMiddleware];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ThemeProvider>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}